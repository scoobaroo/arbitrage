package testing;

import java.util.HashMap;
import java.util.Scanner;

public class Main {

	static HashMap<String,Integer> sigDigs;
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		sigDigs = new HashMap<String,Integer>();
		String s = "ETHBTC, LTCBTC, BNBBTC, NEOBTC, QTUMETH, EOSETH, SNTETH, BNTETH, BCCBTC, GASBTC, BNBETH, BTCUSDT, ETHUSDT, HSRBTC, OAXETH, DNTETH, MCOETH, ICNETH, MCOBTC, WTCBTC, WTCETH, LRCBTC, LRCETH, QTUMBTC, YOYOBTC, OMGBTC, OMGETH, ZRXBTC, ZRXETH, STRATBTC, STRATETH, SNGLSBTC, SNGLSETH, BQXBTC, BQXETH, KNCBTC, KNCETH, FUNBTC, FUNETH, SNMBTC, SNMETH, NEOETH, IOTABTC, IOTAETH, LINKBTC, LINKETH, XVGBTC, XVGETH, SALTBTC, SALTETH, MDABTC, MDAETH, MTLBTC, MTLETH, SUBBTC, SUBETH, EOSBTC, SNTBTC, ETCETH, ETCBTC, MTHBTC, MTHETH, ENGBTC, ENGETH, DNTBTC, ZECBTC, ZECETH, BNTBTC, ASTBTC, ASTETH, DASHBTC, DASHETH, OAXBTC, ICNBTC, BTGBTC, BTGETH, EVXBTC, EVXETH, REQBTC, REQETH, VIBBTC, VIBETH, HSRETH, TRXBTC, TRXETH, POWRBTC, POWRETH, ARKBTC, ARKETH, YOYOETH, XRPBTC, XRPETH, MODBTC, MODETH, ENJBTC, ENJETH, STORJBTC, STORJETH, BNBUSDT, VENBNB, YOYOBNB, POWRBNB, VENBTC, VENETH, KMDBTC, KMDETH, NULSBNB, RCNBTC, RCNETH, RCNBNB, NULSBTC, NULSETH, RDNBTC, RDNETH, RDNBNB, XMRBTC, XMRETH, DLTBNB, WTCBNB, DLTBTC, DLTETH, AMBBTC, AMBETH, AMBBNB, BCCETH, BCCUSDT, BCCBNB, BATBTC, BATETH, BATBNB, BCPTBTC, BCPTETH, BCPTBNB, ARNBTC, ARNETH, GVTBTC, GVTETH, CDTBTC, CDTETH, GXSBTC, GXSETH, NEOUSDT, NEOBNB, POEBTC, POEETH, QSPBTC, QSPETH, QSPBNB, BTSBTC, BTSETH, BTSBNB, XZCBTC, XZCETH, XZCBNB, LSKBTC, LSKETH, LSKBNB, TNTBTC, TNTETH, FUELBTC, FUELETH, MANABTC, MANAETH, BCDBTC, BCDETH, DGDBTC, DGDETH, IOTABNB, ADXBTC, ADXETH, ADXBNB, ADABTC, ADAETH, PPTBTC, PPTETH, CMTBTC, CMTETH, CMTBNB, XLMBTC, XLMETH, XLMBNB, CNDBTC, CNDETH, CNDBNB, LENDBTC, LENDETH, WABIBTC, WABIETH, WABIBNB, LTCETH, LTCUSDT, LTCBNB, TNBBTC, TNBETH, WAVESBTC, WAVESETH, WAVESBNB, GTOBTC, GTOETH, GTOBNB, ICXBTC, ICXETH, ICXBNB, OSTBTC, OSTETH, OSTBNB, ELFBTC, ELFETH, AIONBTC, AIONETH, AIONBNB, NEBLBTC, NEBLETH, NEBLBNB, BRDBTC, BRDETH, BRDBNB, MCOBNB, EDOBTC, EDOETH, WINGSBTC, WINGSETH, NAVBTC, NAVETH, NAVBNB, LUNBTC, LUNETH, TRIGBTC, TRIGETH, TRIGBNB, APPCBTC, APPCETH, APPCBNB, VIBEBTC, VIBEETH, RLCBTC, RLCETH, RLCBNB, INSBTC, INSETH, PIVXBTC, PIVXETH, PIVXBNB, IOSTBTC, IOSTETH, CHATBTC, CHATETH, STEEMBTC, STEEMETH, STEEMBNB, NANOBTC, NANOETH, NANOBNB, VIABTC, VIAETH, VIABNB, BLZBTC, BLZETH, BLZBNB, AEBTC, AEETH, AEBNB, RPXBTC, RPXETH, RPXBNB, NCASHBTC, NCASHETH, NCASHBNB, POABTC, POAETH, POABNB, ZILBTC, ZILETH, ZILBNB, ONTBTC, ONTETH, ONTBNB, STORMBTC, STORMETH, STORMBNB, QTUMBNB, QTUMUSDT, XEMBTC, XEMETH, XEMBNB, WANBTC, WANETH, WANBNB, WPRBTC, WPRETH, QLCBTC, QLCETH, SYSBTC, SYSETH, SYSBNB, QLCBNB, GRSBTC, GRSETH";
		String integers = "0,2,0,2,2,2,0,3,0,2,0,2,0,2,2,0,2,2,0,2,0,2,0,0,0,2,2,2,2,2,2,2,2,2,2,2,0,0,0,2,2,0,2,0,2,2,0,0,2,0,0,3,3,0,5,0,0,0,0,3,2,2,2,0,0,2,2,2,0,0,2,0,0,5,0,0,0,2,2,0,0,0,2,0,0,0,0,2,2,0,2,2,0,2,3,2,0,0,2,0,0,0,0,2,0,0,2,2,2,0,2,2,0,0,0,2,0,2,0,0,2,0,0,0,0,2,0,0,2,0,0,0,2,2,0,0,0,0,2,9,2,0,2,0,0,0,0,2,0,2,0,0,0,2,0,2,0,2,3,0,0,0,0,0,0,2,2,2,0,0,5,0,2,0,0,0,0,2,0,2,0,0,0,0,3,2,0,0,2,3,3,0,2,0,0,0,2,0,2,0,2,5,0,0,2,0,0,0,2,2,2,2,0,3,2,0,2,2,0,2,2,2,0,3,2,0,2,2,0,0,0,0,2,0,0,3,3,0,3,2,0,2,0,0,3,2,2,0,0,3,0,5,2,2,0,3,0,0,2,2,2,0,3,0,0,2,0,0,0,0,6,0,2,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,3,2,2,0,2,0,0,0,2,0";
		String[] symbols = s.replaceAll("\\s+","").split(",");
		Scanner reader = new Scanner(System.in);  // Reading from System.in
		for(String string : symbols) {
			System.out.println("Enter significant digits for "+ string + ":");	
			String sigDigitsString = reader.next();
			int sigDigits = Integer.valueOf(sigDigitsString);
			sigDigs.put(string, sigDigits);
			System.out.println(sigDigs);
		}
		String intString = "";
		for (int i: sigDigs.values()) {
			intString += i+",";
		}
		System.out.println(intString);
	}
}
